<toolset>
    <pathSet base="anaconda3/bin">
        <toolPath tool="create_spectrum_file" path="python3.5"/>
    </pathSet>
    <pathSet base="$base">
        <pathVar name="create_spectrum_file.script" path="create_spectrum_file.py" />
    </pathSet>
    <tool name="create_spectrum_file">
        <require name="flowParams"       type="file"/>
        <produce name="spectra"        type="file" naming="explicit"  extension="mgf"/>

        <execution env="binary" argConvention="adhoc">
            <arg pathRef="create_spectrum_file.script"/>
                <arg valueRef="flowParams"/>
                <arg valueRef="spectra"/>
        </execution>
    </tool>


    <pathSet base="anaconda3/bin">
        <toolPath tool="FindDatasetMatchesParallelPrep" path="python3.5"/>
        <toolPath tool="FindDatasetMatchesParallelStep" path="python3.5"/>
        <toolPath tool="FindDatasetMatchesParallelMerge" path="python3.5"/>
    </pathSet>
    <pathSet base="$base">
        <pathVar name="FindDatasetMatchesParallelPrep.script" path="find_related_public_data_prep.py" />
        <pathVar name="FindDatasetMatchesParallelStep.script" path="find_related_public_data_wrapper.py" />
        <pathVar name="FindDatasetMatchesParallelMerge.script" path="find_related_public_data_merge.py" />
    </pathSet>
    <tool name="FindDatasetMatchesParallelPrep">
        <require name="flowParams"       type="file"/>
        <produce name="all_dataset_matches_parallel_params"        type="folder" naming="explicit"  extension="json"/>

        <execution env="binary" argConvention="adhoc">
            <arg pathRef="FindDatasetMatchesParallelPrep.script"/>
                <arg valueRef="flowParams"/>
                <arg valueRef="all_dataset_matches_parallel_params"/>
                <arg value="20"/>
        </execution>
    </tool>

    <tool name="FindDatasetMatchesParallelStep">
        <require name="flowParams"       type="file"/>
        <require name="all_dataset_matches_parallel_params"       type="file"/>
        <produce name="all_dataset_matches_parallel_matches_output"        type="file" naming="explicit"  extension="tsv"/>
        <produce name="all_dataset_matches_parallel_unique_files_output"        type="file" naming="explicit"  extension="tsv"/>
        <produce name="all_dataset_matches_parallel_all_file_matches_output"        type="file" naming="explicit"  extension="tsv"/>

        <execution env="binary" argConvention="adhoc">
            <arg pathRef="FindDatasetMatchesParallelStep.script"/>
            <arg valueRef="flowParams"/>
            <arg valueRef="all_dataset_matches_parallel_params"/>
            <arg valueRef="all_dataset_matches_parallel_matches_output"/>
            <arg valueRef="all_dataset_matches_parallel_unique_files_output"/>
            <arg valueRef="all_dataset_matches_parallel_all_file_matches_output"/>
        </execution>
    </tool>

    <tool name="FindDatasetMatchesParallelMerge">
        <require name="all_dataset_matches_parallel_matches_output"       type="folder"/>
        <produce name="all_dataset_matches"        type="file" naming="explicit"  extension="tsv"/>

        <execution env="binary" argConvention="adhoc">
            <arg pathRef="FindDatasetMatchesParallelMerge.script"/>s
                <arg valueRef="all_dataset_matches_parallel_matches_output"/>
                <arg valueRef="all_dataset_matches"/>
        </execution>
    </tool>

    <pathSet base="anaconda3/bin">
        <toolPath tool="library_search_single" path="python3.5"/>
    </pathSet>
    <pathSet base="$base">
        <pathVar name="library_search_single.script" path="molecular_librarysearch_wrapper.py" />
        <pathVar name="main_execmodule.binary" path="main_execmodule.allcandidates" />
    </pathSet>
    <tool name="library_search_single">
        <require name="workflowParameters" type="file"/>
        <require name="spectra" type="file"/>
        <require name="library" type="folder"/>
        <produce name="all_library_matches" type="file" naming="explicit"  extension="tsv"/>

        <execution env="binary" argConvention="adhoc">
            <arg pathRef="library_search_single.script"/>
            <arg valueRef="workflowParameters"/>
            <arg valueRef="spectra"/>
            <arg valueRef="library"/>
            <arg valueRef="all_library_matches"/>
            <arg pathRef="main_execmodule.binary"/>
        </execution>
    </tool>

    <pathSet base="anaconda3/bin">
        <toolPath tool="get_dbannotations" path="python3.5"/>
    </pathSet>
    <pathSet base="$base">
        <pathVar name="get_dbannotations.script" path="getGNPS_library_annotations.py"/>
    </pathSet>
    <tool name="get_dbannotations">
        <require name="result" type="file"/>
        <produce name="DB_result" type="file" naming="explicit" extension="tsv"/>

        <execution env="binary" argConvention="adhoc">
            <arg pathRef="get_dbannotations.script"/>
            <arg valueRef="result"/>
            <arg valueRef="DB_result"/>
        </execution>
    </tool>


    <pathSet base="anaconda3/bin">
        <toolPath tool="trace_matches_to_file" path="python3.5"/>
    </pathSet>
    <pathSet base="$base">
        <pathVar name="trace_matches_to_file.script" path="trace_to_single_file.py" />
    </pathSet>
    <tool name="trace_matches_to_file">
        <require name="all_dataset_matches" type="file"/>
        <produce name="all_dataset_file_matches" type="file" naming="explicit"  extension="tsv"/>
        <produce name="all_dataset_spectra_matches" type="file" naming="explicit"  extension="tsv"/>

        <execution env="binary" argConvention="adhoc">
            <arg pathRef="trace_matches_to_file.script"/>
            <arg valueRef="all_dataset_matches"/>
            <arg valueRef="all_dataset_file_matches"/>
            <arg valueRef="all_dataset_spectra_matches"/>
        </execution>
    </tool>


    <pathSet base="anaconda3/bin">
        <toolPath tool="create_linkout_file" path="python3.5"/>
    </pathSet>
    <pathSet base="$base">
        <pathVar name="create_linkout_file.script" path="reanalysis_preparation.py" />
    </pathSet>
    <tool name="create_linkout_file">
        <require name="all_dataset_file_matches" type="file"/>
        <produce name="linkout_file" type="file" naming="explicit"  extension="tsv"/>

        <execution env="binary" argConvention="adhoc">
            <arg pathRef="create_linkout_file.script"/>
            <arg valueRef="all_dataset_file_matches"/>
            <arg valueRef="linkout_file"/>
        </execution>
    </tool>



    <pathSet base="anaconda3/bin">
        <toolPath tool="foodomics_track" path="python3.5"/>
    </pathSet>
    <pathSet base="$base">
        <pathVar name="foodomics_track.script" path="foodomics_track.py" />
        <pathVar name="foodomics_metadata.file" path="foodomics_metadata.txt" />
    </pathSet>
    <tool name="foodomics_track">
        <require name="all_dataset_file_matches" type="file"/>
        <produce name="foodomics_tracking_file" type="file" naming="explicit"  extension="tsv"/>

        <execution env="binary" argConvention="adhoc">
            <arg pathRef="foodomics_track.script"/>
            <arg pathRef="foodomics_metadata.file"/>
            <arg valueRef="all_dataset_file_matches"/>
            <arg valueRef="foodomics_tracking_file"/>
        </execution>
    </tool>



    <!-- Running written description -->                                                                                                                                                       
    <pathSet base="anaconda3/bin">
        <toolPath tool="write_description" path="python"/>
    </pathSet>

    <pathSet base="$base/">
        <pathVar name="write_description.script" path="write_description.py"/>
    </pathSet>

    <tool name="write_description">
        <require name="workflowParameters" type="file"/>
        <produce name="written_description" type="file" naming="explicit" extension="html"/>

        <execution env="binary" argConvention="adhoc">
            <arg pathRef="write_description.script"/>
            <arg valueRef="workflowParameters"/>
            <arg valueRef="written_description"/>
        </execution>
    </tool>

</toolset>
